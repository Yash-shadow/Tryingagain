# database init, supports mysql too
database=h2
spring.sql.init.schema-locations=classpath*:db/${database}/schema.sql
spring.sql.init.data-locations=classpath*:db/${database}/data.sql

# Web
spring.thymeleaf.mode=HTML

# JPA
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=true

# Internationalization
spring.messages.basename=messages/messages

# Actuator
management.endpoints.web.exposure.include=*


# Logging
logging.file.name=/tmp/hello-observability.log
logging.level.org.springframework=INFO
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg traceID=%X{trace_id} %n

# Tomcat logging
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.rotate=false
server.tomcat.accesslog.suffix=.log
server.tomcat.accesslog.prefix=access_log
server.tomcat.accesslog.directory=/tmp
server.tomcat.accesslog.pattern=common
# logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework.context.annotation=TRACE

# Maximum time static resources should be cached
spring.web.resources.cache.cachecontrol.max-age=12h


# resilience
resilience4j.bulkhead.configs.default.maxConcurrentCalls=5
resilience4j.bulkhead.configs.default.maxWaitDuration=0
resilience4j.bulkhead.instances.greetingBulkhead.baseConfig=default


###

# spring.jackson.serialization.indent_output=true


# management.endpoint.health.show-details=always
# management.health.diskspace.enabled=false
# management.health.circuitbreakers.enabled=true
# management.health.ratelimiters.enabled=false

# management.metrics.distribution.percentiles-histogram.http.server.requests=true
# management.metrics.distribution.percentiles-histogram.resilience4j.circuitbreaker.calls=true

# resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
# resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
# resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=5
# resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
# resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
# resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5s
# resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
# resilience4j.circuitbreaker.configs.default.eventConsumerBufferSize=10
# resilience4j.circuitbreaker.configs.default.recordExceptions=org.springframework.web.client.HttpServerErrorException, java.util.concurrent.TimeoutException, java.io.IOException
# resilience4j.circuitbreaker.configs.default.ignoreExceptions=io.github.robwin.exception.BusinessException
# resilience4j.circuitbreaker.configs.shared.slidingWindowSize=100
# resilience4j.circuitbreaker.configs.shared.permittedNumberOfCallsInHalfOpenState=30
# resilience4j.circuitbreaker.configs.shared.waitDurationInOpenState=1s
# resilience4j.circuitbreaker.configs.shared.failureRateThreshold=50
# resilience4j.circuitbreaker.configs.shared.eventConsumerBufferSize=10
# resilience4j.circuitbreaker.configs.shared.ignoreExceptions=io.github.robwin.exception.BusinessException
# resilience4j.circuitbreaker.instances.backendA.baseConfig=default
# resilience4j.circuitbreaker.instances.backendB.registerHealthIndicator=true
# resilience4j.circuitbreaker.instances.backendB.slidingWindowSize=10
# resilience4j.circuitbreaker.instances.backendB.minimumNumberOfCalls=10
# resilience4j.circuitbreaker.instances.backendB.permittedNumberOfCallsInHalfOpenState=3
# resilience4j.circuitbreaker.instances.backendB.waitDurationInOpenState=5s
# resilience4j.circuitbreaker.instances.backendB.failureRateThreshold=50
# resilience4j.circuitbreaker.instances.backendB.eventConsumerBufferSize=10
# resilience4j.circuitbreaker.instances.backendB.recordFailurePredicate=io.github.robwin.exception.RecordFailurePredicate
# resilience4j.retry.configs.default.maxAttempts=3
# resilience4j.retry.configs.default.waitDuration=100
# resilience4j.retry.configs.default.retryExceptions=org.springframework.web.client.HttpServerErrorException, java.util.concurrent.TimeoutException, java.io.IOException
# resilience4j.retry.configs.default.ignoreExceptions=io.github.robwin.exception.BusinessException
# resilience4j.retry.instances.backendA.baseConfig=default
# resilience4j.retry.instances.backendB.baseConfig=default
# resilience4j.bulkhead.configs.default.maxConcurrentCalls=100
# resilience4j.bulkhead.instances.backendA.maxConcurrentCalls=10
# resilience4j.bulkhead.instances.backendB.maxWaitDuration=10ms
# resilience4j.bulkhead.instances.backendB.maxConcurrentCalls=20
# resilience4j.thread-pool-bulkhead.configs.default.maxThreadPoolSize=4
# resilience4j.thread-pool-bulkhead.configs.default.coreThreadPoolSize=2
# resilience4j.thread-pool-bulkhead.configs.default.queueCapacity=2
# resilience4j.thread-pool-bulkhead.instances.backendA.baseConfig=default
# resilience4j.thread-pool-bulkhead.instances.backendB.maxThreadPoolSize=1
# resilience4j.thread-pool-bulkhead.instances.backendB.coreThreadPoolSize=1
# resilience4j.thread-pool-bulkhead.instances.backendB.queueCapacity=1
# resilience4j.ratelimiter.configs.default.registerHealthIndicator=false
# resilience4j.ratelimiter.configs.default.limitForPeriod=10
# resilience4j.ratelimiter.configs.default.limitRefreshPeriod=1s
# resilience4j.ratelimiter.configs.default.timeoutDuration=0
# resilience4j.ratelimiter.configs.default.eventConsumerBufferSize=100
# resilience4j.ratelimiter.instances.backendA.baseConfig=default
# resilience4j.ratelimiter.instances.backendB.limitForPeriod=6
# resilience4j.ratelimiter.instances.backendB.limitRefreshPeriod=500ms
# resilience4j.ratelimiter.instances.backendB.timeoutDuration=3s
# resilience4j.timelimiter.configs.default.cancelRunningFuture=false
# resilience4j.timelimiter.configs.default.timeoutDuration=2s
# resilience4j.timelimiter.instances.backendA.baseConfig=default
# resilience4j.timelimiter.instances.backendB.baseConfig=default

